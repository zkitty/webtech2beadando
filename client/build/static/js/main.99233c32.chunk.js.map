{"version":3,"sources":["store/CustomerStore.js","components/customer/CustomerShoppingCart.js","dispatcher/ToastMessages.js","store/WorkerStore.js","store/ManagerStore.js","actions/WorkerActions.js","components/worker/WorkerOrderList.js","components/worker/WorkerPartsList.js","actions/ManagerActions.js","components/manager/ManagerOrderList.js","components/manager/ManagerOrderListCustomer.js","dispatcher/AppDispatcher.js","actions/CustomerActions.js","components/customer/CustomerInfoForm.js","components/customer/WindowSizeForm.js","service/WindowCalculator.js","service/PartsCalculator.js","service/PriceCalculator.js","components/customer/CustomerNewOrder.js","components/customer/CustomerOrderList.js","components/customer/CustomerDetails.js","components/worker/WorkerDetails.js","components/manager/ManagerStatisticsPanel.js","components/manager/ManagerDetails.js","components/NavBar.js","App.js","serviceWorker.js","index.js","dispatcher/AppConstants.js"],"names":["store_CustomerStore","_orders","_customer","_window","_shoppingCart","this","emit","callback","on","removeListener","EventEmitter","CustomerShoppingCart","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_onChange","bind","assertThisInitialized","state","shoppingCart","setState","customerStore","addChangeListener","removeChangeListener","react_default","a","createElement","className","map","order","index","key","customer","name","price","React","Component","dispatcher_ToastMessages","orderId","isAssembled","isAssembledString","toast","isInvoiced","isInvoicedString","isPaid","isPaidString","installationTime","installationTimeString","year","month","day","hours","successString","store_WorkerStore","_requiredParts","store_ManagerStore","_ordersFromSelectedUser","_statistics","_selectedCustomer","_selectedOrderPaymentStatus","actions_WorkerActions","AppDispatcher","handleViewAction","actionType","AppConstants","WORKER_LIST_ORDERS","payload","WORKER_LIST_PARTS","WORKER_ASSEMBLE_SHUTTER","WorkerOrderList","WorkerActions","listOrders","orders","WorkerStore","_id","onClick","listParts","email","assembleShutter","PartsList","parts","louvers","shutterStaples","rails","tiltRod","hinges","ReactDOM","render","document","getElementById","actions_ManagerActions","MANAGER_LIST_ORDERS","MANAGER_VIEW_CUSTOMER","MANAGER_ORGANIZE_INSTALLATION","MANAGER_CREATE_INVOICE","MANAGER_CHECK_STATISTICS","ManagerOrderList","ManagerActions","ManagerStore","createInvoice","listOrdersFromUser","organizeInstallation","ManagerOrderListCustomer","action","dispatch","source","Dispatcher","serverUrl","dispatcher","register","data","fetch","concat","then","response","json","result","emitChange","find","headers","Content-Type","Accept","res","WorkerPartsList","orderToAssemble","toastMessages","showAssembleMessage","orderToInvoice","showInvoiceMessage","prices","r","orderCount","length","maxPrice","max","minPrice","min","sumPrice","reduce","b","showInstallationTimeMessage","CUSTOMER_LIST_ORDERS","CustomerStore","CUSTOMER_SEND_ORDER","method","body","JSON","stringify","showNewOrderMessage","CUSTOMER_PAY_ORDER","orderToPay","showPayMessage","actions_CustomerActions","customerName","CustomerInfoForm","phoneNumber","_this2","htmlFor","id","ref","onChange","event","target","value","type","WindowSizeForm","height","width","service_WindowCalculator","panels","Math","round","mountSize","service_PartsCalculator","louverCount","ceil","widthMultiplier","service_PriceCalculator","CustomerNewOrder","windowWidth","windowHeight","window","windowCalculator","calculateWindow","partsCalculator","calculateParts","priceCalculator","calculatePrice","newOrder","push","refs","forEach","o","customerActions","sendOrder","customer_CustomerInfoForm","customer_WindowSizeForm","saveToShoppingCart","customer_CustomerShoppingCart","sendOrders","CustomerOrderList","_name","CustomerActions","payOrder","CustomerDetails","workerStore","WorkerDetails","worker_WorkerOrderList","ManagerStatisticsPanel","checkStatistics","statistics","ManagerDetails","NavBar","href","configure","App","react_toastify","components_NavBar","worker_WorkerDetails","Boolean","location","hostname","match","src_App","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.99233c32.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\n\nclass CustomerStore extends EventEmitter {\n\n    _orders = [];\n    _customer = {};\n    _window = {};\n    _shoppingCart = [];\n\n    emitChange() {\n        this.emit('change')\n    }\n\n    addChangeListener(callback) {\n        this.on('change', callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener('change', callback);\n    }\n\n}\n\nexport default new CustomerStore();\n","import React from 'react';\nimport customerStore from \"../../store/CustomerStore\";\n\nclass CustomerShoppingCart extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { shoppingCart: [] };\n    }\n\n    _onChange() {\n        this.setState({ shoppingCart: customerStore._shoppingCart });\n    }\n\n    componentDidMount() {\n        customerStore.addChangeListener(this._onChange);\n    }\n\n    componentWillUnmount() {\n        customerStore.removeChangeListener(this._onChange);\n    }\n\n    render() {\n        return (\n            <div className=\"card mt-2\">\n                <div className=\"card-header\">Order details</div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        {\n                            this.state.shoppingCart.map((order, index) => {\n                                return (\n                                    <div key={index}>\n                                        <h5>Customer: {order.customer.name}</h5>\n                                        <h5>Price: {order.price} €</h5>\n                                        <hr className=\"mt-3 mb-3\"/>\n                                    </div>)\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomerShoppingCart\n","import { toast } from 'react-toastify';\n\nclass ToastMessages {\n\n    showAssembleMessage(orderId, isAssembled) {\n        let isAssembledString = \"\";\n        if (isAssembled) {\n            isAssembledString = \"Shutter has been assembled.\"\n        } else {\n            isAssembledString = \"Shutter has not been assembled yet.\"\n        }\n\n        toast(isAssembledString + \" Order ID: \" + orderId);\n    }\n\n    showInvoiceMessage(orderId, isInvoiced) {\n        let isInvoicedString = \"\";\n        if (isInvoiced) {\n            isInvoicedString = \"Invoice has been created.\"\n        } else {\n            isInvoicedString = \"Invoice has not been created.\"\n        }\n\n        toast(isInvoicedString + \" Order ID: \" + orderId);\n    }\n\n    showPayMessage(orderId, isPaid) {\n        let isPaidString = \"\";\n        if (isPaid) {\n            isPaidString = \"Payment has been completed successfully.\"\n        } else {\n            isPaidString = \"Payment has not been completed successfully.\"\n        }\n\n        toast(isPaidString + \" Order ID: \" + orderId);\n    }\n\n    showInstallationTimeMessage(orderId, installationTime) {\n        const installationTimeString = installationTime.year + \".\"\n            + installationTime.month + 1 + \".\"\n            + installationTime.day + \" \"\n            + installationTime.hours + \":00\";\n\n        toast(\"Installation has been organized for orderID: \" + orderId + \" \" + installationTimeString);\n    }\n\n    showNewOrderMessage(orderId) {\n        let successString = \"\";\n        if (orderId) {\n            successString = \"Order has been created\";\n        } else {\n            successString = \"There was an error. Order has not been created.\"\n        }\n\n        toast(successString + \" Order ID: \" + orderId);\n    }\n}\n\nexport default new ToastMessages();\n","import { EventEmitter } from 'events'\n\nclass WorkerStore extends EventEmitter {\n\n    _orders = [];\n    _requiredParts = null;\n\n    emitChange() {\n        this.emit('change')\n    }\n\n    addChangeListener(callback) {\n        this.on('change', callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener('change', callback);\n    }\n\n}\n\nexport default new WorkerStore();\n","import { EventEmitter } from 'events'\n\nclass ManagerStore extends EventEmitter {\n\n    _orders = [];\n    _ordersFromSelectedUser = null;\n    _statistics = {};\n    _selectedCustomer = {};\n    _selectedOrderPaymentStatus = {};\n\n    emitChange() {\n        this.emit('change')\n    }\n\n    addChangeListener(callback) {\n        this.on('change', callback);\n    }\n\n    removeChangeListener(callback) {\n        this.removeListener('change', callback);\n    }\n\n}\n\nexport default new ManagerStore();\n","import AppConstants from '../dispatcher/AppConstants'\nimport AppDispatcher from '../dispatcher/AppDispatcher';\n\nclass WorkerActions {\n\n    listOrders() {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.WORKER_LIST_ORDERS,\n            payload: null\n        });\n    }\n\n    listParts(orderId) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.WORKER_LIST_PARTS,\n            payload: orderId\n        });\n    }\n\n    assembleShutter(orderId) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.WORKER_ASSEMBLE_SHUTTER,\n            payload: orderId\n        });\n    }\n}\n\nexport default new WorkerActions();\n","import React from 'react';\nimport WorkerStore from \"../../store/WorkerStore\";\nimport WorkerActions from \"../../actions/WorkerActions\";\n\nclass WorkerOrderList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        WorkerActions.listOrders();\n        this._onChange = this._onChange.bind(this);\n        this.state = { orders: [] };\n    }\n\n    _onChange() {\n        this.setState({ orders: WorkerStore._orders });\n    }\n\n    componentDidMount() {\n        WorkerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        WorkerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">Orders</div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        {\n                            this.state.orders.map((order) => {\n                                return (\n                                    <div key={order._id}>\n\n                                    <div  onClick={() => WorkerActions.listParts(order._id)}>\n                                        <h5>Customer name: {order.customer.name}</h5>\n                                        <h5>Customer e-mail: {order.customer.email}</h5>\n                                        <h5>Price: {order.price} €</h5>\n                                    </div>\n                                    \n                                        <div>\n                                            <button className=\"btn btn-warning\"\n                                                    onClick={() => WorkerActions.assembleShutter(order._id)}>Assemble this shutter\n                                            </button>\n                                        </div>\n\n                                        <hr className=\"mt-3 mb-3\"/>\n                                    </div>\n                                )\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default WorkerOrderList\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport WorkerStore from \"../../store/WorkerStore\";\nimport WorkerOrderList from \"./WorkerOrderList\";\n\nclass PartsList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { parts: {} };\n    }\n\n    _onChange() {\n        this.setState({ parts: WorkerStore._requiredParts });\n    }\n\n    componentDidMount() {\n        WorkerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        WorkerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <h3>Required shutter parts</h3>\n                    <table className=\"table table-light\">\n                        <tbody>\n                        <tr>\n                            <td>louvers</td>\n                            <td>{this.state.parts.louvers}</td>\n                        </tr>\n                        <tr>\n                            <td>shutter staples</td>\n                            <td>{this.state.parts.shutterStaples}</td>\n                        </tr>\n                        <tr>\n                            <td>rails</td>\n                            <td>{this.state.parts.rails}</td>\n                        </tr>\n                        <tr>\n                            <td>tilt rod</td>\n                            <td>{this.state.parts.tiltRod}</td>\n                        </tr>\n                        <tr>\n                            <td>hinges</td>\n                            <td>{this.state.parts.hinges}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n\n                    <button className=\"btn btn-info\" onClick={\n                        () => ReactDOM.render(React.createElement(WorkerOrderList), document.getElementById('mainContent'))\n                    }>Back\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default PartsList\n","import AppConstants from '../dispatcher/AppConstants'\nimport AppDispatcher from '../dispatcher/AppDispatcher';\n\nclass ManagerActions {\n\n    listOrders() {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.MANAGER_LIST_ORDERS,\n            payload: null\n        });\n    }\n\n    listOrdersFromUser(customer) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.MANAGER_VIEW_CUSTOMER,\n            payload: customer\n        });\n    }\n\n    organizeInstallation(orderId) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.MANAGER_ORGANIZE_INSTALLATION,\n            payload: orderId\n        });\n    }\n\n    createInvoice(orderId) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.MANAGER_CREATE_INVOICE,\n            payload: orderId\n        });\n    }\n\n    checkStatistics() {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.MANAGER_CHECK_STATISTICS,\n            payload: null\n        })\n    }\n}\n\nexport default new ManagerActions();\n","import React from 'react';\nimport ManagerStore from \"../../store/ManagerStore\";\nimport ManagerActions from \"../../actions/ManagerActions\";\n\nclass ManagerOrderList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        ManagerActions.listOrders();\n        this._onChange = this._onChange.bind(this);\n        this.state = { orders: [] };\n    }\n\n    _onChange() {\n        this.setState({ orders: ManagerStore._orders });\n    }\n\n    componentDidMount() {\n        ManagerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        ManagerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">Orders</div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        {\n                            this.state.orders.map((order) => {\n                                return (\n                                    <div key={order._id}>\n                                        <h5>Order ID: {order._id}</h5>\n                                        <h5>Customer: {order.customer.name}</h5>\n                                        <h5>Price: {order.price} €</h5>\n\n                                        <div>\n                                            <button className=\"btn btn-warning mr-2\"\n                                                    onClick={() => ManagerActions.createInvoice(order._id)}>\n                                                Create Invoice\n                                            </button>\n                                            <button className=\"btn btn-warning mr-2\"\n                                                    onClick={() => ManagerActions.listOrdersFromUser(order.customer.name)}>\n                                                View Customer\n                                            </button>\n                                            <button className=\"btn btn-warning mr-2\"\n                                                    onClick={() => ManagerActions.organizeInstallation(order._id)}>Organize\n                                                Installation\n                                            </button>\n                                        </div>\n                                        <hr className=\"mt-3 mb-3\"/>\n                                    </div>)\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ManagerOrderList;\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport ManagerStore from \"../../store/ManagerStore\";\nimport ManagerActions from \"../../actions/ManagerActions\";\nimport ManagerOrderList from \"./ManagerOrderList\";\n\nclass ManagerOrderListCustomer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        ManagerActions.listOrdersFromUser(ManagerStore._selectedCustomer);\n        this._onChange = this._onChange.bind(this);\n        this.state = { orders: [] };\n    }\n\n    _onChange() {\n        this.setState({ orders: ManagerStore._ordersFromSelectedUser });\n    }\n\n    componentDidMount() {\n        ManagerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        ManagerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">Orders from {ManagerStore._selectedCustomer}</div>\n                <div className=\"card-body\">\n                    <ul className=\"list-group\">\n                        {\n                            this.state.orders.map((order) => {\n                                return (\n                                    <div key={order._id}>\n                                        <h5>Order ID: {order._id}</h5>\n                                        <h5>Price: {order.price} €</h5>\n                                        <h5>Paid: {order.isPaid ? \"Yes\" : \"No\"}</h5>\n\n                                        <div>\n                                            <button className=\"btn btn-warning mr-2\"\n                                                    onClick={() => ManagerActions.createInvoice(order._id)}>Create\n                                                Invoice\n                                            </button>\n                                            <button className=\"btn btn-warning mr-2\"\n                                                    onClick={() => ManagerActions.organizeInstallation(order._id)}>Organize\n                                                Installation\n                                            </button>\n                                            <div>\n                                                <button className=\"btn btn-info mt-2\" onClick={\n                                                    () => ReactDOM.render(React.createElement(ManagerOrderList), document.getElementById('mainContent'))\n                                                }>Back\n                                                </button>\n                                            </div>\n                                        </div>\n                                        <hr className=\"mt-3 mb-3\"/>\n                                    </div>)\n                            })\n                        }\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ManagerOrderListCustomer;\n","import { Dispatcher } from 'flux'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport toastMessages from './ToastMessages'\nimport AppConstants from './AppConstants'\nimport CustomerStore from \"../store/CustomerStore\";\nimport WorkerStore from '../store/WorkerStore'\nimport ManagerStore from '../store/ManagerStore'\nimport WorkerPartsList from \"../components/worker/WorkerPartsList\";\nimport ManagerOrderListCustomer from \"../components/manager/ManagerOrderListCustomer\";\nimport { round, max, min, mean } from 'lodash';\n\nclass AppDispatcher extends Dispatcher {\n    handleViewAction(action) {\n        this.dispatch({\n            source: 'VIEW_ACTION',\n            payload: action\n        });\n    }\n}\n\nconst serverUrl = 'http://localhost:8080';\nconst dispatcher = new AppDispatcher();\n\n// WORKER_LIST_ORDERS\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.WORKER_LIST_ORDERS) {\n        return;\n    }\n\n    fetch(`${serverUrl}/worker/list`)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            WorkerStore._orders = result;\n            WorkerStore.emitChange();\n        });\n});\n\n// WORKER_LIST_PARTS\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.WORKER_LIST_PARTS) {\n        return;\n    }\n\n    WorkerStore._requiredParts = WorkerStore._orders.find((order) => {\n        return order._id === data.payload.payload;\n    });\n    fetch(`${serverUrl}/worker/listParts/${data.payload.payload}`, {\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            \"Accept\": \"application/x-www-form-urlencoded\"\n        }\n    }).then((response) => {\n        return response.json()\n    }).then((res) => {\n        WorkerStore._requiredParts = res;\n        WorkerStore.emitChange();\n    });\n\n    ReactDOM.render(\n        React.createElement(WorkerPartsList),\n        document.getElementById('mainContent'));\n    WorkerStore.emitChange();\n});\n\n// WORKER_ASSEMBLE_SHUTTER\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.WORKER_ASSEMBLE_SHUTTER) {\n        return;\n    }\n\n    const orderToAssemble = WorkerStore._orders.find((order) => {\n        return order._id === data.payload.payload;\n    });\n    fetch(`${serverUrl}/worker/assemble/${data.payload.payload}`)\n        .then((response) => {\n            toastMessages.showAssembleMessage(orderToAssemble._id, response);\n        });\n});\n\n// MANAGER_LIST_ORDERS\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.MANAGER_LIST_ORDERS) {\n        return;\n    }\n    fetch(`${serverUrl}/manager/list`)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            ManagerStore._orders = result;\n            ManagerStore.emitChange();\n        });\n});\n\n// MANAGER_VIEW_CUSTOMER\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.MANAGER_VIEW_CUSTOMER) {\n        return;\n    }\n    ManagerStore._selectedCustomer = data.payload.payload;\n    ManagerStore._ordersFromSelectedUser = ManagerStore._orders.find((order) => {\n        return order.customer.name === data.payload.payload;\n    });\n    fetch(`${serverUrl}/manager/viewCustomer/${data.payload.payload}`)\n        .then((response) => {\n            return response.json()\n        })\n        .then((res) => {\n            ManagerStore._ordersFromSelectedUser = res;\n            ManagerStore.emitChange();\n        });\n\n    ReactDOM.render(\n        React.createElement(ManagerOrderListCustomer),\n        document.getElementById('mainContent'));\n    ManagerStore.emitChange();\n});\n\n// MANAGER_CREATE_INVOICE\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.MANAGER_CREATE_INVOICE) {\n        return;\n    }\n    const orderToInvoice = ManagerStore._orders.find((order) => {\n        return order._id === data.payload.payload;\n    });\n    fetch(`${serverUrl}/manager/createInvoice/${data.payload.payload}`)\n        .then((response) => {\n            toastMessages.showInvoiceMessage(orderToInvoice._id, response);\n        });\n});\n\n// MANAGER_CHECK_STATISTICS\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.MANAGER_CHECK_STATISTICS) {\n        return;\n    }\n\n    fetch(`${serverUrl}/manager/list`)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            const prices = result.map(r => r.price);\n            ManagerStore._statistics = {\n                \"orderCount\": result.length,\n                \"maxPrice\": max(prices),\n                \"minPrice\": min(prices),\n                \"sumPrice\": prices.reduce(function(prices,b){return prices + b;},0),\n\n            };\n            ManagerStore.emitChange();\n        });\n});\n\n// MANAGER_ORGANIZE_INSTALLATION\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.MANAGER_ORGANIZE_INSTALLATION) {\n        return;\n    }\n\n    fetch(`${serverUrl}/manager/organizeInstallation/${data.payload.payload}`)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            toastMessages.showInstallationTimeMessage(data.payload.payload, result);\n        });\n});\n\n// CUSTOMER_LIST_ORDERS\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.CUSTOMER_LIST_ORDERS) {\n        return;\n    }\n\n    fetch(`${serverUrl}/customer/list/${data.payload.payload}`)\n        .then(response => {\n            return response.json()\n        })\n        .then(result => {\n            CustomerStore._orders = result;\n            CustomerStore.emitChange();\n        });\n});\n\n// CUSTOMER_SEND_ORDER\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.CUSTOMER_SEND_ORDER) {\n        return;\n    }\n\n    fetch(`${serverUrl}/customer/sendOrder/`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data.payload.payload)\n    }).then((response) => {\n        return response.json()\n    }).then((result) => {\n        toastMessages.showNewOrderMessage(result.orderId);\n    })\n});\n\n// CUSTOMER_PAY_ORDER\ndispatcher.register((data) => {\n    if (data.payload.actionType !== AppConstants.CUSTOMER_PAY_ORDER) {\n        return;\n    }\n\n    const orderToPay = CustomerStore._orders.find((order) => {\n        return order._id === data.payload.payload;\n    });\n    fetch(`${serverUrl}/customer/pay/${data.payload.payload}`, {\n        method: 'POST'\n    }).then((response) => {\n        toastMessages.showPayMessage(orderToPay._id, response);\n    });\n});\n\nexport default dispatcher;\n","import AppConstants from '../dispatcher/AppConstants'\nimport AppDispatcher from '../dispatcher/AppDispatcher';\n\nclass CustomerActions {\n\n    listOrders(customerName) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.CUSTOMER_LIST_ORDERS,\n            payload: customerName\n        });\n    }\n\n    sendOrder(order) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.CUSTOMER_SEND_ORDER,\n            payload: order\n        });\n    }\n\n    payOrder(orderId) {\n        AppDispatcher.handleViewAction({\n            actionType: AppConstants.CUSTOMER_PAY_ORDER,\n            payload: orderId\n        });\n    }\n}\n\nexport default new CustomerActions();\n","import React from 'react';\nimport customerStore from \"../../store/CustomerStore\";\n\nclass CustomerInfoForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { name: null, email: null, phoneNumber: null };\n    }\n\n    render() {\n        return (\n            <form className=\"mb-3\">\n                <h5>Customer Info</h5>\n\n                <div className=\"form-group row\">\n                    <label className=\"col-3 col-form-label\" htmlFor=\"customerName\">Customer Name</label>\n                    <div className=\"col-9\">\n                        <input\n                            id=\"customerName\"\n                            ref=\"customerName\"\n                            className=\"form-control\"\n                            onChange={(event) => {\n                                const name = event.target.value;\n                                this.setState({ name: name });\n                                customerStore._customer.name = name;\n                            }}\n                            type=\"text\"/>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-3 col-form-label\" htmlFor=\"customerName\">E-mail</label>\n                    <div className=\"col-9\">\n                        <input\n                            id=\"customerName\"\n                            className=\"form-control\"\n                            onChange={(event) => {\n                                const email = event.target.value;\n                                this.setState({ email: email });\n                                customerStore._customer.email = email;\n                            }}\n                            type=\"email\"/>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label className=\"col-3 col-form-label\" htmlFor=\"customerName\">Mobile number</label>\n                    <div className=\"col-9\">\n                        <input\n                            id=\"customerName\"\n                            className=\"form-control\"\n                            onChange={(event) => {\n                                const phoneNumber = event.target.value;\n                                this.setState({ phoneNumber: phoneNumber });\n                                customerStore._customer.phoneNumber = phoneNumber;\n                            }}\n                            type=\"phone\"/>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default CustomerInfoForm\n","import React from 'react';\n\nimport customerStore from \"../../store/CustomerStore\";\n\nclass WindowSizeForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            height: 0,\n            width: 0\n        }\n    }\n\n    render() {\n        return (\n            <form className=\"mb-3\">\n                <h5>Window Size</h5>\n\n                <div className=\"form-group row\">\n                    <label htmlFor=\"width\" className=\"col-3 col-form-label\">Width (cm)</label>\n                    <div className=\"col-9\">\n                        <input type=\"number\" className=\"form-control\" id=\"width\" onChange={(event) => {\n                            const width = event.target.value;\n                            this.setState({ width: width });\n                            customerStore._window.width = width;\n                        }}/>\n                    </div>\n                </div>\n                <div className=\"form-group row\">\n                    <label htmlFor=\"height\" className=\"col-3 col-form-label\">Height (cm)</label>\n                    <div className=\"col-9\">\n                        <input type=\"number\" className=\"form-control\" id=\"height\" onChange={(event) => {\n                            const height = event.target.value;\n                            this.setState({ height: height });\n                            customerStore._window.height = height;\n                        }}/>\n                    </div>\n                </div>\n            </form>\n        )\n    }\n}\n\nexport default WindowSizeForm;\n","class WindowCalculator {\n\n    calculateWindow(width, height) {\n\n        return {\n            \"width\": width,\n            \"height\": height,\n            \"panels\": Math.max(1, Math.round(width/100)),\n            \"mountSize\": Math.max(1, Math.round(width/100) * 10)\n        }\n    }\n}\n\nexport default new WindowCalculator();\n","class PartsCalculator {\n\n    calculateParts(width, height) {\n        const louverCount = Math.ceil(height / 30);\n        const widthMultiplier = Math.ceil(width / 40);\n\n        return {\n            \"louvers\": (widthMultiplier * louverCount),\n            \"shutterStaples\": (widthMultiplier * (louverCount - 1)),\n            \"rails\": widthMultiplier,\n            \"tiltRod\": widthMultiplier,\n            \"hinges\": (widthMultiplier * (2 * (louverCount - 1))),\n        };\n    }\n}\n\nexport default new PartsCalculator();\n","class PriceCalculator {\n\n    calculatePrice(parts) {\n        return parts.louvers * 22 +\n            parts.shutterStaples * 11 +\n            parts.hinges * 2 +\n            parts.tiltRod * 20 +\n            parts.rails * 16;\n    }\n\n}\n\nexport default new PriceCalculator();\n","import React from 'react';\nimport CustomerShoppingCart from './CustomerShoppingCart';\nimport customerStore from \"../../store/CustomerStore\";\nimport customerActions from \"../../actions/CustomerActions\";\nimport CustomerInfoForm from \"./CustomerInfoForm\";\nimport WindowSizeForm from \"./WindowSizeForm\";\nimport windowCalculator from \"../../service/WindowCalculator\";\nimport partsCalculator from \"../../service/PartsCalculator\";\nimport priceCalculator from \"../../service/PriceCalculator\";\n\nclass CustomerNewOrder extends React.Component {\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { shoppingCart: null };\n    }\n\n    _onChange() {\n        this.setState({ shoppingCart: customerStore._shoppingCart });\n    }\n\n    componentDidMount() {\n        customerStore.addChangeListener(this._onChange);\n    }\n\n    componentWillUnmount() {\n        customerStore.removeChangeListener(this._onChange);\n    }\n\n    saveToShoppingCart() {\n        const windowWidth = customerStore._window.width;\n        const windowHeight = customerStore._window.height;\n\n        const window = windowCalculator.calculateWindow(windowWidth, windowHeight);\n        const parts = partsCalculator.calculateParts(windowWidth, windowHeight);\n        const price = priceCalculator.calculatePrice(parts);\n        const newOrder = {\n            customer: customerStore._customer,\n            window: window,\n            parts: parts,\n            price: price\n        };\n        customerStore._shoppingCart.push(newOrder);\n        CustomerInfoForm.refs.customerName.value=\"\";\n        customerStore.emitChange();\n    }\n\n    sendOrders(orders) {\n        orders.forEach(o => {\n            customerActions.sendOrder(o);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">New Order</div>\n                <div className=\"card-body\">\n                    <CustomerInfoForm/>\n                    <WindowSizeForm/>\n                    <form>\n                        <div className=\"form-group row\">\n                            <label htmlFor=\"add\" className=\"col-3 col-form-label\"/>\n                            <div className=\"col-9\">\n                                <button\n                                    onClick={() => {\n                                        this.saveToShoppingCart()\n                                    }}\n                                    className=\"btn btn-warning\">Add\n                                </button>\n                            </div>\n                        </div>\n                    </form>\n\n                    <CustomerShoppingCart/>\n\n\n                    <button className=\"btn btn-danger btn-block mt-2\"\n                            onClick={() => this.sendOrders(customerStore._shoppingCart)}>Send Order\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CustomerNewOrder;\n","import React from 'react';\nimport CustomerStore from \"../../store/CustomerStore\";\nimport customerStore from \"../../store/CustomerStore\";\nimport CustomerActions from \"../../actions/CustomerActions\";\nimport customerActions from \"../../actions/CustomerActions\";\n\nclass CustomerOrderList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { orders: [] };\n    }\n\n    _onChange() {\n        this.setState({ orders: CustomerStore._orders });\n    }\n\n    componentDidMount() {\n        CustomerStore.addChangeListener(this._onChange);\n    }\n\n    componentWillUnmount() {\n        CustomerStore.removeChangeListener(this._onChange);\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"card mb-3\">\n                    <div className=\"card-header\">Select Customer</div>\n                    <div className=\"card-body\">\n                        <form>\n                            <div className=\"form-group row\">\n                                <label className=\"col-3 col-form-label\" htmlFor=\"customerName\">Customer Name</label>\n                                <div className=\"col-9\">\n                                    <input\n                                        id=\"customerName\"\n                                        className=\"form-control\"\n                                        onChange={(event) => {\n                                            const name = event.target.value;\n                                            this.setState({ name: name });\n                                            CustomerStore._name = name;\n                                        }}\n                                        type=\"text\"/>\n                                </div>\n                            </div>\n                            <div className=\"form-group row\">\n                                <div className=\"col-12\">\n                                    <button\n                                        onClick={() => {\n                                            customerActions.listOrders(customerStore._name)\n                                        }}\n                                        className=\"btn btn-warning btn-block\">\n                                        List\n                                    </button>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                <div className=\"card\">\n                    <div className=\"card-header\">Orders</div>\n                    <div className=\"card-body\">\n                        <ul className=\"list-group\">\n                            {\n                                this.state.orders.map((order) => {\n                                    return (\n                                        <div key={order._id}>\n                                            <h5>Order ID: {order._id}</h5>\n                                            <h5>Customer: {order.customer.name}</h5>\n                                            <h5>Price: {order.price} €</h5>\n\n                                            <div className=\"mt-2\">\n                                                <button className=\"btn btn-danger btn-block\"\n                                                        onClick={() => CustomerActions.payOrder(order._id)}>Pay\n                                                </button>\n                                            </div>\n\n                                            <hr className=\"mt-3 mb-3\"/>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomerOrderList\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\n\nimport CustomerNewOrder from \"./CustomerNewOrder\";\nimport workerStore from \"../../store/WorkerStore\";\nimport CustomerOrderList from \"./CustomerOrderList\";\n\nclass CustomerDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { parts: {} };\n    }\n\n    _onChange() {\n        this.setState({ parts: workerStore._requiredParts });\n    }\n\n    componentDidMount() {\n        workerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        workerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <div className=\"card\">\n                        <div className=\"card-header\">Customer</div>\n                        <div className=\"card-body\">\n                            <ul className=\"list-group btn-block\">\n                                <button className=\"btn btn-info\" onClick={\n                                    () => ReactDOM.render(React.createElement(CustomerNewOrder), document.getElementById('customerMainContent'))\n                                }>New Order\n                                </button>\n                            </ul>\n                            <ul className=\"list-group btn-block\">\n                                <button className=\"btn btn-info\" onClick={\n                                    () => ReactDOM.render(React.createElement(CustomerOrderList), document.getElementById('customerMainContent'))\n                                }>List Orders\n                                </button>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"col-8\" id=\"customerMainContent\">\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CustomerDetails\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport WorkerStore from \"../../store/WorkerStore\";\nimport WorkerOrderList from \"./WorkerOrderList\";\n\nclass WorkerDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = null;\n    }\n\n    render() {\n        return (\n            <div id=\"workerMainContent\">\n                <WorkerOrderList/>\n            </div>\n        )\n    }\n}\n\nexport default WorkerDetails\n","import React from 'react';\nimport ManagerStore from \"../../store/ManagerStore\";\nimport ManagerActions from \"../../actions/ManagerActions\";\n\nclass ManagerStatisticsPanel extends React.Component {\n\n    constructor(props) {\n        super(props);\n        ManagerActions.checkStatistics();\n        this._onChange = this._onChange.bind(this);\n        this.state = { statistics: {} };\n    }\n\n    _onChange() {\n        this.setState({ statistics: ManagerStore._statistics });\n    }\n\n    componentDidMount() {\n        ManagerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        ManagerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"card\">\n                <div className=\"card-header\">Statistics</div>\n                <div className=\"card-body\">\n                    <div>\n                        <h5>Number of orders</h5>\n                        <h1>{this.state.statistics.orderCount}</h1>\n                        <hr className=\"mt-3 mb-3\"/>\n                    </div>\n                    <div>\n                        <h5>Maximum order price</h5>\n                        <h1>{this.state.statistics.maxPrice} €</h1>\n                        <hr className=\"mt-3 mb-3\"/>\n                    </div>\n                    <div>\n                        <h5>Minimum order price</h5>\n                        <h1>{this.state.statistics.minPrice} €</h1>\n                        <hr className=\"mt-3 mb-3\"/>\n                    </div>\n                    <div>\n                        <h5>All income</h5>\n                        <h1>{this.state.statistics.sumPrice} €</h1>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ManagerStatisticsPanel\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport WorkerStore from \"../../store/WorkerStore\";\nimport ManagerOrderList from \"./ManagerOrderList\";\nimport ManagerStatisticsPanel from \"./ManagerStatisticsPanel\";\n\nclass ManagerDetails extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this._onChange = this._onChange.bind(this);\n        this.state = { parts: {} };\n    }\n\n    _onChange() {\n        this.setState({ parts: WorkerStore._requiredParts });\n    }\n\n    componentDidMount() {\n        WorkerStore.addChangeListener(this._onChange)\n    }\n\n    componentWillUnmount() {\n        WorkerStore.removeChangeListener(this._onChange)\n    }\n\n    render() {\n        return (\n            <div className=\"row\">\n\n                <div className=\"col-4\">\n                    <div>\n                        <div className=\"card\">\n                            <div className=\"card-header\">Manager</div>\n                            <div className=\"card-body\">\n                                <ul className=\"list-group btn-block\">\n                                    <button className=\"btn btn-info\" onClick={\n                                        () => ReactDOM.render(React.createElement(ManagerOrderList), document.getElementById('managerMainContent'))\n                                    }>List Orders\n                                    </button>\n                                </ul>\n                                <ul className=\"list-group btn-block \">\n                                    <button className=\"btn btn-info\" onClick={\n                                        () => ReactDOM.render(React.createElement(ManagerStatisticsPanel), document.getElementById('managerMainContent'))\n                                    }>Check Statistics\n                                    </button>\n                                </ul>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-8\" id=\"managerMainContent\">\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ManagerDetails\n","import React from 'react'\nimport ReactDOM from \"react-dom\";\nimport CustomerDetails from './customer/CustomerDetails';\nimport WorkerDetails from \"./worker/WorkerDetails\";\nimport ManagerDetails from \"./manager/ManagerDetails\";\n\nclass NavBar extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = null;\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\" onClick={() =>\n                            ReactDOM.render(React.createElement(CustomerDetails), document.getElementById('mainContent'))\n                        }>Customer</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\" onClick={() =>\n                            ReactDOM.render(React.createElement(WorkerDetails), document.getElementById('mainContent'))\n                        }>Worker</a>\n                    </li>\n                    <li className=\"nav-item\">\n                        <a className=\"nav-link\" href=\"#\" onClick={() =>\n                            ReactDOM.render(React.createElement(ManagerDetails), document.getElementById('mainContent'))\n                        }>Manager</a>\n                    </li>\n                </ul>\n            </nav>\n        )\n    }\n}\n\nexport default NavBar\n","import React from 'react';\nimport './App.scss';\nimport NavBar from './components/NavBar';\nimport WorkerDetails from \"./components/worker/WorkerDetails\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\nfunction App() {\n    return (\n        <div className=\"App container-fluid p-0\">\n            <ToastContainer />\n            <NavBar/>\n            <div className=\"container-fluid pt-4 content-area\">\n                <div className=\"container\" id=\"mainContent\">\n                    <WorkerDetails/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\n    CUSTOMER_LIST_ORDERS: 'customer-list-orders',\n    CUSTOMER_SEND_ORDER: 'customer-send-order',\n    CUSTOMER_PAY_ORDER: 'customer-pay-order',\n    WORKER_LIST_ORDERS: 'worker-list-orders',\n    WORKER_ASSEMBLE_SHUTTER: 'worker-assemble-shutter',\n    WORKER_LIST_PARTS: \"worker-list-parts\",\n    MANAGER_LIST_ORDERS: 'manager-list-orders',\n    MANAGER_VIEW_CUSTOMER: 'manager-view-customer',\n    MANAGER_CREATE_INVOICE: 'manager-create-invoice',\n    MANAGER_CHECK_STATISTICS: 'manager-check-statistics',\n    MANAGER_ORGANIZE_INSTALLATION: 'manager-organize-installation',\n};\n"],"sourceRoot":""}